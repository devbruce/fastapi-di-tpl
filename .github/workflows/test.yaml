name: "Lint & Test"
on: [push]

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: "Lint & Format"
    runs-on: ubuntu-24.04
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      #----------------------------------------------
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # Check Lint & Format on poetry environment
      #----------------------------------------------
      - name: "Lint & Format Check"
        run: |
          poetry run mypy --config-file=pyproject.toml .
          poetry run black --config=pyproject.toml --check .
          poetry run isort --sp=pyproject.toml --check .
          poetry run flake8 --toml-config=pyproject.toml .

  test:
    name: "Test"
    runs-on: ubuntu-24.04
    steps:
        #----------------------------------------------
        #       check-out repo and set-up python
        #----------------------------------------------
        - name: Check out repository
          uses: actions/checkout@v4
        #----------------------------------------------
        - name: Set up python
          id: setup-python
          uses: actions/setup-python@v5
          with:
            python-version: "3.12"
        #----------------------------------------------
        #  -----  install & configure poetry  -----
        #----------------------------------------------
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            virtualenvs-path: .venv
            installer-parallel: true
        #----------------------------------------------
        #       load cached venv if cache exists
        #----------------------------------------------
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v4
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        #----------------------------------------------
        # install dependencies if cache does not exist
        #----------------------------------------------
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root

        #----------------------------------------------
        # Run tests on poetry environment
        #----------------------------------------------
        - name: "Run tests"
          run: |
            poetry run pytest -c pyproject.toml
